# =========================
#   BTT SKR 1.4 — Klipper
#   Ender Extender (SKR Mini E3 -> SKR 1.4)
# =========================

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[exclude_object]

[mcu]
# Replace with your SKR 1.4 serial (ls /dev/serial/by-id/*)
serial: /dev/serial/by-id/usb-Klipper_lpc1768_0D80000BA498C89519CC3461C32000F5-if00

[temperature_sensor RaspberryPi4_2GB]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 4000
max_z_velocity: 15
max_z_accel: 200
square_corner_velocity: 5

# -------------------------
#   STEPPERS (TMC2209 UART)
#   Driver sockets: 0=X, 1=Y, 2=Z, 3=E0, 4=E1
# -------------------------

[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 40
endstop_pin: ^P1.29              # X endstop
position_endstop: -21
position_min: -21
position_max: 300
homing_speed: 200

[tmc2209 stepper_x]
uart_pin: P1.10
run_current: 0.580
stealthchop_threshold: 0

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
microsteps: 16
rotation_distance: 40
endstop_pin: ^P1.28              # Y endstop
position_endstop: -14
position_min: -14
position_max: 291
homing_speed: 200

[tmc2209 stepper_y]
uart_pin: P1.9
run_current: 0.700
stealthchop_threshold: 0

# Z homes to probe; dual Z uses Z socket + E1 socket
[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -2
position_max: 250

[tmc2209 stepper_z]
uart_pin: P1.8
run_current: 0.500
stealthchop_threshold: 0

[stepper_z1]
step_pin: P1.15                 # E1 driver
dir_pin: P1.14
enable_pin: !P1.16
microsteps: 16
rotation_distance: 8

[tmc2209 stepper_z1]
uart_pin: P1.1
run_current: 0.500
stealthchop_threshold: 0

# -------------------------
#   EXTRUDER
# -------------------------
[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
microsteps: 16
rotation_distance: 22.6789511
gear_ratio: 50:10
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7                 # HE0
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: P0.24                # TH0
#control: pid
#pid_Kp: 34.909
#pid_Ki: 3.373
#pid_Kd: 90.327
min_temp: 0
max_temp: 295
max_power: 1.0
pressure_advance: 0.096

[tmc2209 extruder]
uart_pin: P1.4
run_current: 0.85
stealthchop_threshold: 0

# -------------------------
#   BED
# -------------------------
[heater_bed]
heater_pin: P2.5                 # BED
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.25                # THB
#control: pid
#pid_Kp: 52.355
#pid_Ki: 1.745
#pid_Kd: 392.662
min_temp: 0
max_temp: 130

# -------------------------
#   BLTOUCH (Servo0 + Probe headers)
# -------------------------
[bltouch]
sensor_pin: ^P0.10               # PROBE header
control_pin: P2.0                # SERVO0 header
x_offset: -40
y_offset: -12
z_offset: 5.0                    # re-calibrate after swap
stow_on_each_sample: False
probe_with_touch_mode: True
pin_up_reports_not_triggered: True
pin_up_touch_mode_reports_triggered: True

[safe_z_home]
home_xy_position: 150,150
speed: 100
z_hop: 5
z_hop_speed: 15

# -------------------------
#   BED MESH
# -------------------------
[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: -20, -10
mesh_max: 209.98, 249.98
probe_count: 5,5
algorithm: bicubic

# -------------------------
#   FANS
# -------------------------
# Part Cooling — FAN0 (24V from toolhead)
[fan]
pin: P2.3

# Hotend fan as thermostatic — use HE1 MOSFET low-side
# Wire fan + to 24V (toolhead), fan – to HE1 –
[heater_fan hotend_fan]
pin: P2.4                      # HE1
heater: extruder
heater_temp: 45.0
kick_start_time: 0.5

# -------------------------
#   SENSORS / ENDSTOPS
# -------------------------

#[filament_motion_sensor filament_sensor]
#switch_pin: ^P1.26          # E0DET per your mapping
#extruder: extruder
#detection_length: 7        # mm of commanded extrusion w/ no pulses before trigger
# Optional quality-of-life:
# debounce_ms: 100          # ignore tiny glitches on the signal
# event_delay: 0.5          # wait a bit before acting (often not needed)
#runout_gcode:
#  M117 Runout/Jam detected
#  PAUSE
#insert_gcode:
#  M117 Filament moving again

[filament_motion_sensor filament_sensor]
detection_length: 25
extruder: extruder
switch_pin: ^P1.26
pause_on_runout: True
insert_gcode:
    M117 Insert Detected
runout_gcode:
    M117 Runout Detected
    LCDRGB R=1 G=0 B=0
    BEEP I=12

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0



# X/Y physical endstops defined above; Z uses probe

# -------------------------
#   NEOPIXELS
# -------------------------
# Stealthburner LEDs on NeoPixel header
[neopixel stealthburner_leds]
pin: P1.24
chain_count: 3                 # set to your toolhead LED count
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 1.0

# Extra addressable strip on E1DET (your mapping: P1.25)
[neopixel extra_strip]
pin: P1.25
chain_count: 30                # set to your strip length
color_order: GRB               # or GRBW if applicable
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

# -------------------------
#   QUALITY / TUNING
# -------------------------
[input_shaper]
shaper_type_x: ei
shaper_freq_x: 32.8
# add Y once measured

# -------------------------
#   Dual Z tilt (enable and set probe points when ready)
# -------------------------
[z_tilt]
# Motor order matters: first = [stepper_z], second = [stepper_z1]
# These are the *leadscrew* locations in nozzle coords (rough estimates are fine)
z_positions:
  0,150
  300,150

# Actual PROBE touch points (must be reachable by your BLTouch)
# Your probeable window is about X:-20..210, Y:-10..250
points:
  0,150     # near left screw, inside mesh
  230,150    # near right screw, inside mesh

speed: 300
horizontal_move_z: 7
retries: 5
retry_tolerance: 0.02



# -------------------------
#   MACROS
# -------------------------
[pause_resume]
# no settings needed; enables PAUSE/RESUME hooks

[display_status]
# required if no [display] is defined; lets Fluidd show status/progress

# Park coordinates used by PAUSE (adjust to your machine if desired)
[gcode_macro _PARK_VARS]
variable_park_x: 10
variable_park_y: 10
variable_park_z_lift: 10
gcode:

# PAUSE: lift Z a bit and move to a front-left park so you can access the toolhead
[gcode_macro PAUSE]
description: Pause the print and park the head
rename_existing: BASE_PAUSE
gcode:
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  # Lift Z (relative)
  G91
  {% set lift = printer["gcode_macro _PARK_VARS"].park_z_lift|float %}
  {% if (printer.toolhead.position.z + lift) < (printer.toolhead.axis_maximum.z|float) %}
    G1 Z{lift} F600
  {% endif %}
  # Park X/Y (absolute)
  G90
  G1 X{printer["gcode_macro _PARK_VARS"].park_x} Y{printer["gcode_macro _PARK_VARS"].park_y} F6000
  # optional: turn part fan down during pause
  M106 S0

# RESUME: return to the saved state and continue
[gcode_macro RESUME]
description: Resume the print
rename_existing: BASE_RESUME
gcode:
  # optional: restore fan (comment out if unwanted)
  # M106 S255
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME

# CANCEL_PRINT: stop everything safely
[gcode_macro CANCEL_PRINT]
description: Cancel the current print
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  M106 S0
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro Z_TILT_SAFE]
gcode:
  BLTOUCH_DEBUG COMMAND=reset
  G4 P300
  BLTOUCH_DEBUG COMMAND=pin_up
  G4 P200
  G28
  Z_TILT_ADJUST


# -------------------------
#   SAVE_CONFIG will append here
# -------------------------

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.909
#*# pid_ki = 3.373
#*# pid_kd = 90.327
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 52.355
#*# pid_ki = 1.745
#*# pid_kd = 392.662
